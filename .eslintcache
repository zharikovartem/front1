[{"C:\\OSPanel\\domains\\Front3\\src\\index.tsx":"1","C:\\OSPanel\\domains\\Front3\\src\\reportWebVitals.ts":"2","C:\\OSPanel\\domains\\Front3\\src\\App.tsx":"3","C:\\OSPanel\\domains\\Front3\\src\\redux\\appReducer.ts":"4","C:\\OSPanel\\domains\\Front3\\src\\redux\\store.ts":"5","C:\\OSPanel\\domains\\Front3\\src\\redux\\authReducer.ts":"6","C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoContainer.tsx":"7","C:\\OSPanel\\domains\\Front3\\src\\Components\\Login\\LoginContainer.tsx":"8","C:\\OSPanel\\domains\\Front3\\src\\Components\\Header\\HeaderContainer.tsx":"9","C:\\OSPanel\\domains\\Front3\\src\\Components\\Orders\\OrdersContainer.tsx":"10","C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TasksTreeContainer.tsx":"11","C:\\OSPanel\\domains\\Front3\\src\\Components\\Register\\RegisterContainer.tsx":"12","C:\\OSPanel\\domains\\Front3\\src\\redux\\taskReducer.ts":"13","C:\\OSPanel\\domains\\Front3\\src\\redux\\TaskListReducer.ts":"14","C:\\OSPanel\\domains\\Front3\\src\\api\\authAPI.ts":"15","C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoMobile.tsx":"16","C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoBrowser.tsx":"17","C:\\OSPanel\\domains\\Front3\\src\\Components\\Login\\Login.tsx":"18","C:\\OSPanel\\domains\\Front3\\src\\Components\\Orders\\Orders.tsx":"19","C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TasksTreeBrowser.tsx":"20","C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TasksTreeMobile.tsx":"21","C:\\OSPanel\\domains\\Front3\\src\\Components\\Register\\Register.tsx":"22","C:\\OSPanel\\domains\\Front3\\src\\api\\taskListAPI.ts":"23","C:\\OSPanel\\domains\\Front3\\src\\api\\api.ts":"24","C:\\OSPanel\\domains\\Front3\\src\\api\\taskApi.ts":"25","C:\\OSPanel\\domains\\Front3\\src\\Components\\Login\\LoginForm.tsx":"26","C:\\OSPanel\\domains\\Front3\\src\\Components\\Register\\RegisterForm.tsx":"27","C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\RunTask.tsx\\RunTaskForm.tsx":"28","C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TaskTreeBrowserItemContainer.tsx":"29","C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoForm\\ToDoForm.tsx":"30","C:\\OSPanel\\domains\\Front3\\src\\Components\\TimeScale\\TimeScaleContainer.tsx":"31","C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeaderContainer.tsx":"32","C:\\OSPanel\\domains\\Front3\\src\\Components\\Header\\MenuMobile.tsx":"33","C:\\OSPanel\\domains\\Front3\\src\\utils\\Formik\\ValidateFields.ts":"34","C:\\OSPanel\\domains\\Front3\\src\\utils\\Formik\\CreateAntField.tsx":"35","C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TaskTreeBrowserItem.tsx":"36","C:\\OSPanel\\domains\\Front3\\src\\Components\\Header\\MenuBrowser.tsx":"37","C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeaderMobile.tsx":"38","C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeader.tsx":"39","C:\\OSPanel\\domains\\Front3\\src\\Components\\Header\\MenuPopover.tsx":"40","C:\\OSPanel\\domains\\Front3\\src\\Components\\TimeScale\\TimeScale.tsx":"41","C:\\OSPanel\\domains\\Front3\\src\\utils\\array-helpers.ts":"42","C:\\OSPanel\\domains\\Front3\\src\\Components\\TimeScale\\TaskItem\\TaskItemContainer.tsx":"43","C:\\OSPanel\\domains\\Front3\\src\\Components\\TimeScale\\TaskItem\\TaskItem.tsx":"44","C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\Settings\\SettingsModalContainer.tsx":"45","C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\Settings\\SettingsModal.tsx":"46","C:\\OSPanel\\domains\\Front3\\src\\Components\\Header\\Header.tsx":"47","C:\\OSPanel\\domains\\Front3\\src\\Components\\Header\\MenuContainer.tsx":"48","C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TaskTreeForm\\NewTaskTreeForm.tsx":"49","C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\ProjectForm.tsx":"50","C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\NewProject\\NewProjectForm.tsx":"51","C:\\OSPanel\\domains\\Front3\\src\\utils\\Date\\NewDeteByString.ts":"52","C:\\OSPanel\\domains\\Front3\\src\\Types\\types.ts":"53","C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TaskTreeMobileItem.tsx":"54","C:\\OSPanel\\domains\\Front3\\src\\Components\\Users\\Users.tsx":"55","C:\\OSPanel\\domains\\Front3\\src\\Components\\Users\\UsersContainer.tsx":"56","C:\\OSPanel\\domains\\Front3\\src\\Components\\Users\\UsersMobile.tsx":"57","C:\\OSPanel\\domains\\Front3\\src\\redux\\UsersReducer.ts":"58","C:\\OSPanel\\domains\\Front3\\src\\api\\usersAPI.ts":"59","C:\\OSPanel\\domains\\Front3\\src\\redux\\usersReducer.ts":"60","C:\\OSPanel\\domains\\Front3\\src\\Components\\Users\\CurrentUser\\CurrentUser.tsx":"61","C:\\OSPanel\\domains\\Front3\\src\\Components\\Users\\CurrentUser\\CurrentUserContainer.tsx":"62","C:\\OSPanel\\domains\\Front3\\src\\Components\\Users\\CurrentUser\\UserDataForm.tsx":"63"},{"size":471,"mtime":1613296306227,"results":"64","hashOfConfig":"65"},{"size":440,"mtime":1613296306233,"results":"66","hashOfConfig":"65"},{"size":4447,"mtime":1613650510461,"results":"67","hashOfConfig":"65"},{"size":1346,"mtime":1613464808263,"results":"68","hashOfConfig":"65"},{"size":941,"mtime":1613567338247,"results":"69","hashOfConfig":"65"},{"size":5490,"mtime":1613483973237,"results":"70","hashOfConfig":"65"},{"size":1377,"mtime":1613465400095,"results":"71","hashOfConfig":"65"},{"size":750,"mtime":1613296306198,"results":"72","hashOfConfig":"65"},{"size":713,"mtime":1613296306193,"results":"73","hashOfConfig":"65"},{"size":709,"mtime":1613296306200,"results":"74","hashOfConfig":"65"},{"size":3059,"mtime":1613475117154,"results":"75","hashOfConfig":"65"},{"size":843,"mtime":1613483985421,"results":"76","hashOfConfig":"65"},{"size":5652,"mtime":1613296306232,"results":"77","hashOfConfig":"65"},{"size":3075,"mtime":1613475042842,"results":"78","hashOfConfig":"65"},{"size":2766,"mtime":1613486521356,"results":"79","hashOfConfig":"65"},{"size":14454,"mtime":1613723878449,"results":"80","hashOfConfig":"65"},{"size":4339,"mtime":1613558017359,"results":"81","hashOfConfig":"65"},{"size":1337,"mtime":1613560172969,"results":"82","hashOfConfig":"65"},{"size":248,"mtime":1613560191734,"results":"83","hashOfConfig":"65"},{"size":9337,"mtime":1613724465437,"results":"84","hashOfConfig":"65"},{"size":8956,"mtime":1613492858140,"results":"85","hashOfConfig":"65"},{"size":1319,"mtime":1613560246044,"results":"86","hashOfConfig":"65"},{"size":3256,"mtime":1613493321830,"results":"87","hashOfConfig":"65"},{"size":704,"mtime":1613566991977,"results":"88","hashOfConfig":"65"},{"size":3169,"mtime":1613556942365,"results":"89","hashOfConfig":"65"},{"size":1508,"mtime":1613296306199,"results":"90","hashOfConfig":"65"},{"size":2110,"mtime":1613296306202,"results":"91","hashOfConfig":"65"},{"size":1479,"mtime":1613473329590,"results":"92","hashOfConfig":"65"},{"size":1241,"mtime":1613475104471,"results":"93","hashOfConfig":"65"},{"size":2174,"mtime":1613562484407,"results":"94","hashOfConfig":"65"},{"size":1049,"mtime":1613473181988,"results":"95","hashOfConfig":"65"},{"size":1039,"mtime":1613725917733,"results":"96","hashOfConfig":"65"},{"size":4430,"mtime":1613560096988,"results":"97","hashOfConfig":"65"},{"size":2373,"mtime":1613721389433,"results":"98","hashOfConfig":"65"},{"size":7782,"mtime":1613724343623,"results":"99","hashOfConfig":"65"},{"size":10836,"mtime":1613725355902,"results":"100","hashOfConfig":"65"},{"size":2056,"mtime":1613485271270,"results":"101","hashOfConfig":"65"},{"size":2999,"mtime":1613470419886,"results":"102","hashOfConfig":"65"},{"size":5044,"mtime":1613727515430,"results":"103","hashOfConfig":"65"},{"size":1334,"mtime":1613560124723,"results":"104","hashOfConfig":"65"},{"size":4670,"mtime":1613723151482,"results":"105","hashOfConfig":"65"},{"size":318,"mtime":1613296306237,"results":"106","hashOfConfig":"65"},{"size":913,"mtime":1613296306212,"results":"107","hashOfConfig":"65"},{"size":3878,"mtime":1613723244763,"results":"108","hashOfConfig":"65"},{"size":849,"mtime":1613296306215,"results":"109","hashOfConfig":"65"},{"size":5097,"mtime":1613722364576,"results":"110","hashOfConfig":"65"},{"size":2344,"mtime":1613564230676,"results":"111","hashOfConfig":"65"},{"size":944,"mtime":1613300106274,"results":"112","hashOfConfig":"65"},{"size":4121,"mtime":1613656943247,"results":"113","hashOfConfig":"65"},{"size":1462,"mtime":1613722423698,"results":"114","hashOfConfig":"65"},{"size":4005,"mtime":1613464410159,"results":"115","hashOfConfig":"65"},{"size":939,"mtime":1613469461211,"results":"116","hashOfConfig":"65"},{"size":1729,"mtime":1613487596097,"results":"117","hashOfConfig":"65"},{"size":5411,"mtime":1613493366342,"results":"118","hashOfConfig":"65"},{"size":2346,"mtime":1613722005620,"results":"119","hashOfConfig":"65"},{"size":802,"mtime":1613650392066,"results":"120","hashOfConfig":"65"},{"size":326,"mtime":1613567486981,"results":"121","hashOfConfig":"65"},{"size":1360,"mtime":1613567237180,"results":"122","hashOfConfig":"65"},{"size":1686,"mtime":1613721389432,"results":"123","hashOfConfig":"65"},{"size":1494,"mtime":1613721836612,"results":"124","hashOfConfig":"65"},{"size":7560,"mtime":1613727820243,"results":"125","hashOfConfig":"65"},{"size":1275,"mtime":1613721389429,"results":"126","hashOfConfig":"65"},{"size":4577,"mtime":1613725406403,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"1to4j46",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"130"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\OSPanel\\domains\\Front3\\src\\index.tsx",[],["257","258"],"C:\\OSPanel\\domains\\Front3\\src\\reportWebVitals.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\App.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\redux\\appReducer.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\redux\\store.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\redux\\authReducer.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Login\\LoginContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Header\\HeaderContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Orders\\OrdersContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TasksTreeContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Register\\RegisterContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\redux\\taskReducer.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\redux\\TaskListReducer.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\api\\authAPI.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoMobile.tsx",["259","260"],"C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoBrowser.tsx",["261"],"import { Card, Drawer } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ToDoHeaderContainer from './ToDoHeader/ToDoHeaderContainer'\r\nimport TimeScale from '../TimeScale/TimeScaleContainer'\r\nimport { Formik } from 'formik'\r\nimport ToDoForm from './ToDoForm/ToDoForm'\r\nimport moment from \"moment\"\r\nimport { ToDoListPropsType } from './ToDoContainer'\r\nimport { NewTaskDataType, TaskType } from '../../Types/types'\r\nimport SettingsModalContainer from './Settings/SettingsModalContainer'\r\n\r\ntype InitialDrewerDataType = {\r\n    header: string,\r\n    taskId: false | number\r\n}\r\n\r\nconst initialDrewerData: InitialDrewerDataType = {\r\n    header: 'Create New Task',\r\n    taskId: false\r\n}\r\n\r\nconst zeroTime = moment()\r\nzeroTime.hours(0)\r\nzeroTime.minutes(0)\r\nzeroTime.seconds(0)\r\nzeroTime.milliseconds(0)\r\n\r\ntype InitialValuesType = {\r\n    name: string,\r\n    time: moment.Moment,\r\n    date: moment.Moment,\r\n    descriptions: string | null\r\n}\r\n\r\nconst initialValues: InitialValuesType = {\r\n    name: '',\r\n    time: zeroTime,\r\n    date: moment(),\r\n    descriptions: ''\r\n\r\n}\r\n\r\nconst ToDoBrowser: React.FC<ToDoListPropsType> = (props) => {\r\n    useEffect(() => {\r\n        if (props.taskList === null) {\r\n            props.getTaskList(props.dateInterval.startDate.format('YYYY-MM-DD'), props.dateInterval.endDate.format('YYYY-MM-DD'))\r\n        }\r\n    }, [props.taskList])\r\n\r\n    \r\n\r\n    const [visible, setVisible] = useState(false)\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [drawerData, setDrawerData] = useState(initialDrewerData)\r\n    const [initialFormValues, setInitialFormValues] = useState(initialValues)\r\n\r\n    useEffect(() => {\r\n        console.log('name: ', initialFormValues.name)\r\n    }, [initialFormValues])\r\n\r\n    const onTaskEdit = (value: TaskType) => {\r\n        console.log('onTaskEdit')\r\n        setDrawerData({\r\n            header: 'Edite \"' + value.name + '\"',\r\n            taskId: value.id\r\n        })\r\n\r\n        const splitTime = value.time.split(/:/)\r\n\r\n        setInitialFormValues({\r\n            name: value.name,\r\n            time: moment().hours(Number(splitTime[0])).minutes(Number(splitTime[1])).seconds(0),\r\n            date: moment(value.date),\r\n            descriptions: value.descriptions ? value.descriptions : null\r\n        })\r\n\r\n        showDrawer()\r\n    }\r\n\r\n    const showDrawer = (): void => {\r\n        setVisible(true)\r\n    }\r\n\r\n    const onClose = (): void => {\r\n        setInitialFormValues(initialValues)\r\n        setDrawerData({ ...initialDrewerData })\r\n        setVisible(false)\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const handleSubmit = (values: InitialValuesType, actions: any) => {\r\n        let formProps: NewTaskDataType = {\r\n            ...values,\r\n            time: values.time.format('HH:mm:ss'),\r\n            date: values.date.format('YYYY-MM-DD'),\r\n            user_id: props.userId,\r\n        }\r\n        if (!drawerData.taskId) {\r\n            props.createNewTask(formProps, true)\r\n        } else {\r\n            props.updateTask(formProps, drawerData.taskId)\r\n        }\r\n        actions.resetForm()\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            title={<ToDoHeaderContainer\r\n                showDrawer={showDrawer}\r\n                showModal={showModal}\r\n            />}\r\n            bordered={false}\r\n        >\r\n            <SettingsModalContainer\r\n                isModalVisible={isModalVisible}\r\n                handleOk={handleOk}\r\n                handleCancel={handleCancel}\r\n            />\r\n\r\n            <TimeScale onEdit={onTaskEdit} />\r\n            \r\n            <Drawer\r\n                title={drawerData.header}\r\n                placement=\"right\"\r\n                closable={true}\r\n                onClose={onClose}\r\n                visible={visible}\r\n                width=\"90%\"\r\n            >\r\n                <Formik\r\n                    initialValues={initialFormValues}\r\n                    onSubmit={handleSubmit}\r\n                    render={ToDoForm as any}\r\n                    enableReinitialize={true}\r\n                />\r\n            </Drawer>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ToDoBrowser","C:\\OSPanel\\domains\\Front3\\src\\Components\\Login\\Login.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Orders\\Orders.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TasksTreeBrowser.tsx",["262","263"],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TasksTreeMobile.tsx",["264","265"],"import React, { useState, useEffect } from 'react'\r\nimport { TasksTreePropsType, taskTreeTypes } from './TasksTreeContainer'\r\nimport { Drawer, List, Button, Card, WingBlank, WhiteSpace } from 'antd-mobile'\r\nimport NewTaskTreeForm from './TaskTreeForm/NewTaskTreeForm'\r\nimport './TasksTreeMobile.css'\r\nimport { Formik } from 'formik'\r\nimport { TaskTreeItemMobile } from './TaskTreeMobileItem'\r\nimport { NewTimeByString } from '../../utils/Date/NewDeteByString'\r\nimport { NewTaskListType } from '../../Types/types'\r\n\r\ntype InitialDrewerDataType = {\r\n    header: string,\r\n    taskId: false | number\r\n}\r\n\r\nconst initialDrewerData: InitialDrewerDataType = {\r\n    header: 'Tasks Tree',\r\n    taskId: false\r\n}\r\n\r\nconst TasksTreeMobile: React.FC<TasksTreePropsType> = (props) => {\r\n    useEffect(() => {\r\n        if (props.taskList && props.taskList.length === 0 && !props.isTaskListLoaded) {\r\n            props.getTaskList()\r\n        } else if (props.taskList === undefined) {\r\n            props.getTaskList()\r\n        }\r\n        setVisible(false)\r\n        setInitialFormValues(initialValues)\r\n    }, [props.taskList])\r\n\r\n    const getSelectOptions = () => {\r\n        if (props.taskList !== undefined && props.taskList.length > 0) {\r\n            return props.taskList.map((item) => {\r\n                return ({\r\n                    name: item.name,\r\n                    value: item.id\r\n                })\r\n            })\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    let initialTimeToComplete = NewTimeByString()\r\n\r\n    type SelectOptionType = {\r\n        name: string,\r\n        value: number\r\n    }\r\n\r\n    type InitialValuesType = {\r\n        selectOptions: Array<SelectOptionType> | null,\r\n        taskTypes: typeof taskTreeTypes,\r\n        task_type: Array<number>,\r\n        name?: string,\r\n        descriptions?: string\r\n        // parent_id?: Array<number>\r\n        parent_id?: number\r\n        time_to_complete?: Date\r\n    }\r\n\r\n    const initialValues: InitialValuesType = {\r\n        selectOptions: getSelectOptions(),\r\n        taskTypes: taskTreeTypes,\r\n        task_type: [1],\r\n        time_to_complete: initialTimeToComplete,\r\n        // name: 'empty'\r\n    }\r\n\r\n    const [visible, setVisible] = useState(false)\r\n    const [initialFormValues, setInitialFormValues] = useState(initialValues)\r\n    const [drawerData, setDrawerData] = useState(initialDrewerData)\r\n\r\n    const handleSubmit = (formProps: InitialValuesType) => {\r\n        const newTaskList: NewTaskListType = {\r\n            name: formProps.name,\r\n            task_type: formProps.taskTypes[0].value?.toString(),\r\n            descriptions: formProps.descriptions, \r\n            user_id: props.userId,\r\n            parent_id: formProps.parent_id ? formProps.parent_id : undefined,\r\n            time_to_complete: formProps.time_to_complete ? formProps.time_to_complete.toTimeString().split(' ')[0] : undefined,\r\n        }\r\n\r\n        if (!drawerData.taskId) {\r\n            props.createNewTaskList(newTaskList)\r\n        } else {\r\n            props.updateTaskList(newTaskList, drawerData.taskId)\r\n        }\r\n    }\r\n\r\n    const onAdd = () => {\r\n        if (props.selectedTasks.length !== 0) {\r\n            setDrawerData({ ...drawerData, taskId: false })\r\n            setInitialFormValues({ ...initialValues, parent_id: Number(props.selectedTasks[props.selectedTasks.length - 1]) })\r\n        } else {\r\n            setInitialFormValues({...initialValues, parent_id: initialFormValues.parent_id })\r\n        }\r\n\r\n        setVisible(!visible)\r\n    }\r\n\r\n    const showDrawer = () => {\r\n        setVisible(true)\r\n    }\r\n\r\n    const onBack = () => {\r\n        props.backSelectedTasks()\r\n    }\r\n\r\n    console.log('TasksTreeMobile drawerData', drawerData)\r\n\r\n    return (\r\n        <WingBlank size=\"lg\">\r\n            <WhiteSpace size=\"lg\" />\r\n            <Card>\r\n                <Card.Header\r\n                    // className=\"sticky-top bg-white\"\r\n                    title={\r\n                        <h4 className=\"w-100 text-center\">Tasks Tree</h4>\r\n                        // drawerData.header === 'Tasks Tree' ?\r\n                        // <h4 className=\"w-100 text-center\">{drawerData.header}</h4>\r\n                        // :\r\n                        // <div>{drawerData.header}</div>\r\n                    }\r\n                    extra={\r\n                        <div className=\"d-flex flex-row\">\r\n                            {props.selectedTasks.length > 0 && !visible ?\r\n                                <Button\r\n                                    inline\r\n                                    size=\"small\"\r\n                                    className=\"mx-3 my-2\"\r\n                                    // style={{ marginRight: '4px' }} \r\n                                    onClick={onBack}\r\n                                    type=\"primary\"\r\n                                >\r\n                                    Back\r\n                                    </Button>\r\n                                :\r\n                                null\r\n                            }\r\n                            <Button\r\n                                inline\r\n                                size=\"small\"\r\n                                className=\"mx-3 my-2\"\r\n                                // style={{ marginRight: '4px' }} \r\n                                onClick={onAdd}\r\n                                type=\"primary\"\r\n                            >\r\n                                {visible ? 'Close' : 'Add'}\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                </Card.Header>\r\n                <Drawer\r\n                    className=\"my-drawer\"\r\n                    style={{ minHeight: document.documentElement.clientHeight }}\r\n                    // enableDragHandle\r\n                    contentStyle={{ color: '#A6A6A6', textAlign: 'center', paddingTop: 0, width: \"100%\" }}\r\n                    sidebar={\r\n                        <div className=\"mt-4\">\r\n                            <Formik\r\n                                initialValues={initialFormValues}\r\n                                onSubmit={handleSubmit}\r\n                                render={NewTaskTreeForm as any}\r\n                                enableReinitialize={true}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    open={visible}\r\n                    onOpenChange={onAdd}\r\n                >\r\n                    <List>\r\n                        {props.taskList !== undefined ?\r\n                            props.taskList.map((item) => {\r\n                                let parentId: number\r\n                                if (props.selectedTasks.length !== 0) {\r\n                                    parentId = props.selectedTasks[props.selectedTasks.length - 1]\r\n                                    if (item.parent_id === parentId) {\r\n                                        return (\r\n                                            <TaskTreeItemMobile\r\n                                                taskItem={item}\r\n                                                deleteTaskList={props.deleteTaskList}\r\n                                                showDrawer={showDrawer}\r\n                                                setDrawerData={setDrawerData}\r\n                                                initialFormValues={initialFormValues}\r\n                                                setInitialFormValues={setInitialFormValues}\r\n                                                updateTaskList={props.updateTaskList}\r\n                                            />\r\n                                        )\r\n                                    }\r\n                                } else {\r\n                                    if (item.parent_id === null) {\r\n                                        return (\r\n                                            <TaskTreeItemMobile\r\n                                                taskItem={item}\r\n                                                deleteTaskList={props.deleteTaskList}\r\n                                                showDrawer={showDrawer}\r\n                                                setDrawerData={setDrawerData}\r\n                                                initialFormValues={initialFormValues}\r\n                                                setInitialFormValues={setInitialFormValues}\r\n                                                updateTaskList={props.updateTaskList}\r\n                                            />\r\n                                        )\r\n                                    }\r\n                                }\r\n\r\n                            })\r\n                            :\r\n                            null\r\n                        }\r\n                    </List>\r\n                </Drawer>\r\n            </Card>\r\n        </WingBlank>\r\n    )\r\n}\r\n\r\nexport default TasksTreeMobile","C:\\OSPanel\\domains\\Front3\\src\\Components\\Register\\Register.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\api\\taskListAPI.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\api\\api.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\api\\taskApi.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Login\\LoginForm.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Register\\RegisterForm.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\RunTask.tsx\\RunTaskForm.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TaskTreeBrowserItemContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoForm\\ToDoForm.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TimeScale\\TimeScaleContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeaderContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Header\\MenuMobile.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\utils\\Formik\\ValidateFields.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\utils\\Formik\\CreateAntField.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TaskTreeBrowserItem.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Header\\MenuBrowser.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeaderMobile.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeader.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Header\\MenuPopover.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TimeScale\\TimeScale.tsx",["266"],"C:\\OSPanel\\domains\\Front3\\src\\utils\\array-helpers.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TimeScale\\TaskItem\\TaskItemContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TimeScale\\TaskItem\\TaskItem.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\Settings\\SettingsModalContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\ToDo\\Settings\\SettingsModal.tsx",["267"],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Header\\Header.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Header\\MenuContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TaskTreeForm\\NewTaskTreeForm.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\ProjectForm.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\NewProject\\NewProjectForm.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\utils\\Date\\NewDeteByString.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\Types\\types.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\TasksTree\\TaskTreeMobileItem.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Users\\Users.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Users\\UsersContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Users\\UsersMobile.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\redux\\UsersReducer.ts",["268","269","270","271","272"],"C:\\OSPanel\\domains\\Front3\\src\\api\\usersAPI.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\redux\\usersReducer.ts",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Users\\CurrentUser\\CurrentUser.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Users\\CurrentUser\\CurrentUserContainer.tsx",[],"C:\\OSPanel\\domains\\Front3\\src\\Components\\Users\\CurrentUser\\UserDataForm.tsx",[],{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":47,"column":8,"nodeType":"279","endLine":47,"endColumn":28,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":294,"column":65,"nodeType":"283","messageId":"284","endLine":294,"endColumn":67},{"ruleId":"277","severity":1,"message":"278","line":48,"column":8,"nodeType":"279","endLine":48,"endColumn":24,"suggestions":"285"},{"ruleId":"277","severity":1,"message":"286","line":70,"column":8,"nodeType":"279","endLine":70,"endColumn":24,"suggestions":"287"},{"ruleId":"281","severity":1,"message":"288","line":106,"column":56,"nodeType":"283","messageId":"284","endLine":106,"endColumn":58},{"ruleId":"277","severity":1,"message":"286","line":30,"column":8,"nodeType":"279","endLine":30,"endColumn":24,"suggestions":"289"},{"ruleId":"281","severity":1,"message":"282","line":176,"column":55,"nodeType":"283","messageId":"284","endLine":176,"endColumn":57},{"ruleId":"277","severity":1,"message":"290","line":31,"column":8,"nodeType":"279","endLine":31,"endColumn":28,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":49,"column":22,"nodeType":"294","messageId":"295","endLine":49,"endColumn":33},{"ruleId":"292","severity":1,"message":"296","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":17},{"ruleId":"292","severity":1,"message":"297","line":2,"column":19,"nodeType":"294","messageId":"295","endLine":2,"endColumn":31},{"ruleId":"292","severity":1,"message":"298","line":4,"column":10,"nodeType":"294","messageId":"295","endLine":4,"endColumn":25},{"ruleId":"292","severity":1,"message":"299","line":4,"column":27,"nodeType":"294","messageId":"295","endLine":4,"endColumn":35},{"ruleId":"292","severity":1,"message":"300","line":6,"column":8,"nodeType":"294","messageId":"295","endLine":6,"endColumn":14},"no-native-reassign",["301"],"no-negated-in-lhs",["302"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["303"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["304"],"React Hook useEffect has missing dependencies: 'initialValues' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["305"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.",["306"],"React Hook useEffect has missing dependencies: 'props', 'selestedDates.endDate', and 'selestedDates.startDate'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["307"],"@typescript-eslint/no-unused-vars","'setSettings' is assigned a value but never used.","Identifier","unusedVar","'taskAPI' is defined but never used.","'TaskListType' is defined but never used.","'NewTaskDataType' is defined but never used.","'TaskType' is defined but never used.","'moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"312","fix":"314"},{"desc":"315","fix":"316"},"Update the dependencies array to be: [props, props.dateInterval]",{"range":"317","text":"318"},"Update the dependencies array to be: [props, props.taskList]",{"range":"319","text":"320"},"Update the dependencies array to be: [initialValues, props, props.taskList]",{"range":"321","text":"322"},{"range":"323","text":"322"},"Update the dependencies array to be: [props, props.dateInterval, selestedDates.endDate, selestedDates.startDate]",{"range":"324","text":"325"},[1536,1556],"[props, props.dateInterval]",[1362,1378],"[props, props.taskList]",[2136,2152],"[initialValues, props, props.taskList]",[1093,1109],[1338,1358],"[props, props.dateInterval, selestedDates.endDate, selestedDates.startDate]"]